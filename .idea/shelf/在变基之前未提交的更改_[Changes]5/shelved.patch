Index: src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n\r\nimport java.io.PrintWriter;\r\nimport java.util.*;\r\n\r\npublic class Main {\r\n    public Scanner scanner;\r\n    public PrintWriter output;\r\n    List<Player> players;\r\n    List<Card> deck;\r\n    List<Card> event_deck;\r\n    List<Card> playedCards;\r\n    List<Card> played_eventCards;\r\n\r\n    int current_player = 0;\r\n    int current_player_round = 0;\r\n\r\n    List<Player> players_Participants;\r\n    int [] stage;\r\n    int addcard = 0;\r\n    int sponsor = 100;\r\n    public Main(){\r\n        players = new ArrayList<>();\r\n        deck = new ArrayList<>();\r\n        event_deck = new ArrayList<>();\r\n        played_eventCards = new ArrayList<>();\r\n        playedCards = new ArrayList<>();\r\n        players_Participants = new ArrayList<>();\r\n        stage = new int[0];\r\n    }\r\n    public static void main(String[] args) {\r\n        Main newGame = new Main();\r\n        newGame.startGame();\r\n        newGame.distributeallCards();\r\n        newGame.startRound(newGame.scanner);\r\n        System.exit(0);\r\n    }\r\n    public void initialize_event_Deck(){\r\n        // Create events E cards\r\n        for (int i = 1; i <= 5; i++) {\r\n            if (i == 1 ) event_deck.add(new Card(\"E\",  \"Pl\", 2));\r\n            else if (i <= 1+2) event_deck.add(new Card(\"E\",  \"Qf\", 2));\r\n            else event_deck.add(new Card(\"E\",  \"Pr\", 2));\r\n        }\r\n        // Create quest (Q) cards\r\n        for (int i = 1; i <= 12; i++) {\r\n            if (i <= 3 )event_deck.add(new Card(\"Q\",  \"Q\", 2));\r\n            else if (i <= 3+4 )event_deck.add(new Card(\"Q\",  \"Q\", 3));\r\n            else if (i <= 3+4+3 )event_deck.add(new Card(\"Q\",  \"Q\", 4));\r\n            else event_deck.add(new Card(\"Q\",  \"Q\", 5));\r\n        }\r\n    }\r\n    public void initializeDeck() {\r\n\r\n        // Create Foes (F) cards\r\n        for (int i = 1; i <= 50; i++) {\r\n            if (i <= 8 ) deck.add(new Card(\"F\",  \"F\", 5));\r\n            else if (i <= 8+7) deck.add(new Card(\"F\",  \"F\", 10));\r\n            else if (i <= 8+7+8) deck.add(new Card(\"F\",  \"F\", 15));\r\n            else if (i <= 8+7+8+7) deck.add(new Card(\"F\",  \"F\", 20));\r\n            else if (i <= 8+7+8+7+7) deck.add(new Card(\"F\",  \"F\", 25));\r\n            else if (i <= 8+7+8+7+7+4) deck.add(new Card(\"F\",  \"F\", 30));\r\n            else if (i <= 8+7+8+7+7+4+4) deck.add(new Card(\"F\",  \"F\", 35));\r\n            else if (i <= 8+7+8+7+7+4+4+2) deck.add(new Card(\"F\",  \"F\", 40));\r\n            else if (i <= 8+7+8+7+7+4+4+2+2) deck.add(new Card(\"F\",  \"F\", 50));\r\n            else deck.add(new Card(\"F\",  \"F\", 70));\r\n        }\r\n        // Create basic weapon cards: Swords, battle-axes, lances, horses, excaliburs, and daggers\r\n        for (int i = 1; i <= 6; i++) {\r\n            // Daggers (D)\r\n            deck.add(new Card(\"W\",  \"D\", 5));\r\n        }\r\n        for (int i = 1; i <= 16; i++) {\r\n            // Swords (S)\r\n            deck.add(new Card(\"W\",  \"S\", 10));\r\n        }\r\n        for (int i = 1; i <= 12; i++) {\r\n            // Horses (H)\r\n            deck.add(new Card(\"W\",  \"H\", 10));\r\n        }\r\n        for (int i = 1; i <= 8; i++) {\r\n            // Battle-axes (B)\r\n            deck.add(new Card(\"W\",  \"B\", 15));\r\n        }\r\n        for (int i = 1; i <= 6; i++) {\r\n            // lances (L)\r\n            deck.add(new Card(\"W\",  \"L\", 20));\r\n        }\r\n        for (int i = 1; i <= 2; i++) {\r\n            // Excaliburs (E)\r\n            deck.add(new Card(\"W\",  \"E\", 30));\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //Shuffle the deck of cards\r\n    public void shuffleDeck(List<Card> deck) {\r\n        long seed = System.nanoTime();\r\n        Random random = new Random(seed);\r\n        for (int i = deck.size() - 1; i > 0; i--) {\r\n            int j = random.nextInt(i + 1);\r\n            Card temp = deck.get(i);\r\n            deck.set(i, deck.get(j));\r\n            deck.set(j, temp);\r\n        }\r\n    }\r\n\r\n    public void add_all_players(){\r\n        for (int i = 1; i <= 4; i++) {\r\n            players.add(new Player(0, i));\r\n        }\r\n    }\r\n\r\n    public void distributeallCards(){\r\n        for (Player player : players) {\r\n            distributeCards(player, 12);  // Distribute 12 cards to each player\r\n        }\r\n    }\r\n    public void distributeCards(Player player, int numCards) {\r\n        for (int i = 0; i < numCards; i++) {\r\n            if (deck.isEmpty()) {\r\n                reusedDeck();\r\n            }\r\n            player.addToHand(deck.remove(deck.size() - 1));\r\n        }\r\n    }\r\n    public void reusedDeck() {\r\n        shuffleDeck(playedCards);\r\n        deck.addAll(playedCards);\r\n        playedCards.clear();\r\n    }\r\n    public void reusedeventDeck() {\r\n        shuffleDeck(played_eventCards);\r\n        event_deck.addAll(played_eventCards);\r\n        played_eventCards.clear();\r\n    }\r\n    public void startGame() {\r\n        scanner = new Scanner(System.in);\r\n        output = new PrintWriter(System.out);\r\n        output.println(\"Welcome to the game!\");\r\n        add_all_players();\r\n        initializeDeck();\r\n        initialize_event_Deck();\r\n        shuffleDeck(deck);\r\n        shuffleDeck(event_deck);\r\n        output.flush();\r\n\r\n    }\r\n    private boolean isInteger(String str) {\r\n        try {\r\n            Integer.parseInt(str);\r\n            return true;\r\n        } catch (NumberFormatException e) {\r\n            return false;\r\n        }\r\n    }\r\n    public boolean Check_input_card(String card){\r\n        if (card.matches(\"[A-Z]\\\\(\\\\d+\\\\)\")) {\r\n            String suit = card.replaceAll(\"([A-Z])\\\\((\\\\d+)\\\\)\", \"$1\");\r\n            int number = Integer.parseInt(card.replaceAll(\"([A-Z])\\\\((\\\\d+)\\\\)\", \"$2\"));\r\n            if (number > 70 || number < 5) return false;\r\n            return switch (suit) {\r\n                case \"S\" -> number == 10;\r\n                case \"H\" -> number == 10;\r\n                case \"D\" -> number == 5;\r\n                case \"B\" -> number == 15;\r\n                case \"L\" -> number == 20;\r\n                case \"E\" -> number == 30;\r\n                case \"F\" ->\r\n                        (number == 5 || number == 10 || number == 15 || number == 20 || number == 25 || number == 30 || number == 35 || number == 40 || number == 50 || number == 70);\r\n                default -> false;\r\n            };\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    public void playCard(Scanner scanner, Player player) {\r\n        Displaycard(player, output);\r\n        output.println(\"\\n Enter the card you want to draw (e.g. S(10)) or position: \");\r\n        output.flush();\r\n        String temp = scanner.nextLine();\r\n        if (!temp.isEmpty() && Check_input_card(temp)){\r\n            String suit = temp.substring(0, 1);\r\n            int value = Integer.parseInt(temp.substring(temp.indexOf(\"(\") + 1, temp.indexOf(\")\")));\r\n            Card c = player.playedCard(suit,value);\r\n            if (c != null) {\r\n                playedCards.add(c);\r\n                output.println(\"You removed the card \");\r\n                output.print(\" \"+ c.getSuit() + \"(\" + c.getValue() + \")\\n\");\r\n                output.flush();\r\n                return;\r\n            } else output.print(\"Please enter the card you have \\n\");\r\n        } else if (isInteger(temp)) {\r\n            int position = Integer.parseInt(temp);\r\n            if (position >= 1 && position <= player.getHand().size()) {\r\n                Card c = player.getHand().get(position - 1);\r\n                playedCards.add(c);\r\n                player.getHand().remove(position - 1);\r\n                output.println(\"You removed the card: \");\r\n                output.println(\" \"+ c.getSuit() + \"(\" + c.getValue() + \")\\n\");\r\n                output.flush();\r\n                return;\r\n            } else {\r\n                output.println(\"Invalid position. Please enter a valid card position.\");\r\n            }\r\n            Displaycard(player,output);\r\n        } else {\r\n            output.print(\"Please enter according to the format again \\n\");\r\n        }\r\n\r\n        output.flush();\r\n    }\r\n    public void Displaycard(Player player, PrintWriter output){\r\n        // Display player's hands\r\n        List<Card> temp = new ArrayList<>();\r\n        temp.add(player.getHand().get(0));\r\n        for (int i = 1; i < player.getHand().size(); i++) {\r\n            Card newcard = player.getHand().get(i);\r\n            for (int j = 0; j < temp.size(); j++) {\r\n                if (newcard.getSuit().equals(\"F\")) {\r\n                    if (!temp.get(j).getSuit().equals(\"F\")) {\r\n                        temp.add(j, newcard);\r\n                        break;\r\n                    } else if (newcard.getValue() <= temp.get(j).getValue() && temp.get(j).getSuit().equals(\"F\")) {\r\n                        temp.add(j, newcard);\r\n                        break;\r\n                    } else if (j == temp.size() - 1) {\r\n                        temp.add(newcard);\r\n                        break;\r\n                    }\r\n                } else if (newcard.getValue() <= temp.get(j).getValue() && !temp.get(j).getSuit().equals(\"F\")) {\r\n                    if (newcard.getSuit().equals(\"H\")) {\r\n                        if (!temp.get(j).getSuit().equals(\"S\") || temp.get(j).getSuit().equals(\"H\")) {\r\n                            temp.add(j, newcard);\r\n                            break;\r\n                        } else if (j == temp.size() - 1) {\r\n                            temp.add(newcard);\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        temp.add(j, newcard);\r\n                        break;\r\n                    }\r\n                } else if (j == temp.size() - 1) {\r\n                    temp.add(newcard);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        output.println(\"\\nP\"+ player.id + \"'s hand:\" + temp.size());\r\n        for (Card card : temp) {\r\n            output.print(\" \"+ card.getSuit() + \"(\" + card.getValue() + \") \");\r\n        }\r\n        output.println();\r\n        player.setHand(temp);\r\n        output.flush();\r\n    }\r\n    public void Displayplayers(PrintWriter output){\r\n        for (int i = 0; i < players_Participants.size(); i++) {\r\n            output.println(\"P\" + players_Participants.get(i).Get_id() + \" is eligible \");\r\n        }\r\n    }\r\n    public List<Player>  determineWinner( PrintWriter output) {\r\n        List<Player>  winner = new ArrayList<>();\r\n        for (int i = players.size() - 1; i >= 0; i--) {\r\n            if (players.get(i).Get_shields() >= 7) {\r\n                winner.add(players.get(i));\r\n                output.println(\"The winner is: P\" + players.get(i).Get_id());\r\n                output.flush();\r\n            }\r\n        }\r\n        return winner;\r\n    }\r\n    public void startRound(Scanner scanner){\r\n        while (determineWinner(output).isEmpty()) {\r\n            output.print(\"current player: \" + players.get(current_player_round).Get_id());\r\n            Displaycard(players.get(current_player_round), output);\r\n            draws_event_card(scanner);\r\n            if (stage.length > 0) startQRound(scanner);\r\n            if (sponsor != 100) {\r\n                runQRound(scanner);\r\n            }\r\n            if (current_player != current_player_round) {\r\n                output.print(\"current player: \" + players.get(current_player_round).Get_id());\r\n                Displaycard(players.get(current_player_round),output);\r\n                Player currentPlayer = players.get(current_player_round);\r\n                System.out.println(\"P\"+currentPlayer.Get_id() + \", please leave the hot seat. Press <return> to continue...\");\r\n                scanner.nextLine();\r\n            }\r\n            if (current_player_round < players.size()-1) current_player_round++;\r\n            else current_player_round = 0;\r\n            current_player = current_player_round;\r\n            if (event_deck.isEmpty()) {\r\n                reusedeventDeck();\r\n            }\r\n            List<Player> Winner;\r\n            Winner = determineWinner(output);\r\n            if (!Winner.isEmpty()) break;\r\n            clearConsole();\r\n        }\r\n        exit();\r\n    }\r\n    public static void clearConsole() {\r\n        for (int i = 0; i < 10; i++) {\r\n            System.out.println();\r\n        }\r\n    }\r\n    private void exit() {\r\n        System.out.println(\"Exiting game...\");\r\n        scanner.close();\r\n        output.close();\r\n    }\r\n    public void draws_event_card(Scanner scanner){\r\n        output.println();\r\n        Card event = event_deck.remove(event_deck.size()-1);\r\n        if (event.getType().equals(\"E\")) {\r\n            if (event.getSuit().equals(\"Pl\")) {\r\n                output.println(\"The current player has drawn an Plague card \");\r\n                int shields = players.get(current_player_round).Get_shields();\r\n                if (shields >= 2) {\r\n                    players.get(current_player_round).Set_shields(shields-2);\r\n                    output.println(\"The player \"+ players.get(current_player_round).Get_id() +\" draws this card immediately loses 2 \\n\" +\r\n                            \"shields\");\r\n                }\r\n                output.flush();\r\n            } else if (event.getSuit().equals(\"Qf\")) {\r\n                output.println(\"The current player has drawn an Queen’s favor card\");\r\n                distributeCards(players.get(current_player_round), 2);\r\n                removeCards(scanner, players.get(current_player_round));\r\n            } else {\r\n                output.println(\"The current player has drawn an Prosperity card\");\r\n                output.flush();\r\n                Player currentPlayer = players.get(current_player);\r\n                System.out.println(\"P\"+currentPlayer.Get_id() + \", please leave the hot seat. Press <return> to continue...\");\r\n                scanner.nextLine();\r\n                clearConsole();\r\n                for (Player player : players) {\r\n                    current_player = player.Get_id() -1;\r\n                    output.print(\"current player: \" + players.get(current_player).Get_id());\r\n                    Displaycard(players.get(current_player),output);\r\n                    distributeCards(player, 2);\r\n                    removeCards(scanner, player);\r\n                    currentPlayer = players.get(current_player);\r\n                    System.out.println(\"P\"+currentPlayer.Get_id() + \", please leave the hot seat. Press <return> to continue...\");\r\n                    scanner.nextLine();\r\n                    clearConsole();\r\n                }\r\n            }\r\n            played_eventCards.add(event);\r\n        } else {\r\n            int n = event.getValue();\r\n            stage = new int[n];\r\n        }\r\n        output.flush();\r\n    }\r\n    public void start_set_stage(Scanner scanner) {\r\n        int round = 0;\r\n        for (int i = 0; i < stage.length; i++) {\r\n            if (stage[i] == 0) {\r\n                round = i;\r\n                break;\r\n            }\r\n        }\r\n        output.println(\"\\n\");\r\n        output.println(\"current player: \" + players.get(sponsor).Get_id());\r\n        current_player = sponsor;\r\n        boolean done = true;\r\n        List<Card> stage_card = new ArrayList<>();\r\n        List<Card> stage_card_F = new ArrayList<>();\r\n        while (done) {\r\n            output.println(\"stage : \" + (round+1));\r\n            Displaycard(players.get(sponsor),output);\r\n            output.println(\"Enter the card you want to play (e.g. S(10)): \");\r\n            output.flush();\r\n            String temp = scanner.nextLine();\r\n            if (!temp.isEmpty() && Check_input_card(temp)){\r\n                String suit = temp.substring(0, 1);\r\n                int value = Integer.parseInt(temp.substring(temp.indexOf(\"(\") + 1, temp.indexOf(\")\")));\r\n                int c = hasCard(players.get(sponsor),suit,value);\r\n                if (c != 1111) {\r\n                    if (suit.equals(\"F\")) {\r\n                        if (stage_card_F.isEmpty()) {\r\n                            stage_card_F.add(players.get(sponsor).getHand().get(c));\r\n                        } else {\r\n                            output.println(\"Each stage must consist of a single Foe card \\n\");\r\n                        }\r\n                    } else {\r\n                        if (!stage_card.contains(players.get(sponsor).getHand().get(c))) {\r\n                            stage_card.add(players.get(sponsor).getHand().get(c));\r\n                        } else {\r\n                            output.println(\"non repeated weapon card \\n\");\r\n                        }\r\n                    }\r\n                    output.println(\"The cards used for this stage: \");\r\n                    for (Card card : stage_card) {\r\n                        output.print(\" \"+ card.getSuit() + \"(\" + card.getValue() + \") \");\r\n                    }\r\n                    output.print(\" \"+ stage_card_F.get(0).getSuit() + \"(\" + stage_card_F.get(0).getValue() + \") \");\r\n                    output.flush();\r\n                } else output.println(\"Please enter the card you have \\n\");\r\n                output.flush();\r\n            } else if (isInteger(temp)) {\r\n                int position = Integer.parseInt(temp);\r\n                if (position >= 1 && position <= players.get(sponsor).getHand().size()) {\r\n                    Card c = players.get(sponsor).getHand().get(position - 1);\r\n                    if (c.getSuit().equals(\"F\")) {\r\n                        if (stage_card_F.isEmpty()) {\r\n                            stage_card_F.add(c);\r\n                        } else {\r\n                            output.println(\"Each stage must consist of a single Foe card \\n\");\r\n                        }\r\n                    } else {\r\n                        if (!stage_card.contains(c)) {\r\n                            stage_card.add(c);\r\n                        } else {\r\n                            output.println(\"non repeated weapon card \\n\");\r\n                        }\r\n                    }\r\n                } else {\r\n                    output.println(\"Invalid position. Please enter a valid card position.\");\r\n                }\r\n                output.println(\"The cards used for this stage: \");\r\n                for (Card card : stage_card) {\r\n                    output.print(\" \"+ card.getSuit() + \"(\" + card.getValue() + \") \");\r\n                }\r\n                output.print(\" \"+ stage_card_F.get(0).getSuit() + \"(\" + stage_card_F.get(0).getValue() + \") \");\r\n                output.flush();\r\n            } else if (temp.contains(\"Quit\")) {\r\n                if (stage_card_F.isEmpty()) {\r\n                    stage_card.clear();\r\n                    output.println(\"A stage cannot be empty \\n\");\r\n                }\r\n                else {\r\n                    int value = stage_card_F.get(0).getValue();\r\n                    for (Card card : stage_card) {\r\n                        value += card.getValue();\r\n                    }\r\n                    if (round == 0) {\r\n                        output.println(\"The cards used for this stage: \");\r\n                        for (Card card : stage_card) {\r\n                            output.print(\" \"+ card.getSuit() + \"(\" + card.getValue() + \") \");\r\n                            playedCards.add(players.get(sponsor).playedCard(card.getSuit(), card.getValue()));\r\n                        }\r\n                        output.print(\" \"+ stage_card_F.get(0).getSuit() + \"(\" + stage_card_F.get(0).getValue() + \") \");\r\n                        playedCards.add(players.get(sponsor).playedCard(stage_card_F.get(0).getSuit(),stage_card_F.get(0).getValue()));\r\n                        addcard += 1 + stage_card.size();\r\n                        stage[round] = value;\r\n                        done = false;\r\n                    } else if (value > stage[round-1]) {\r\n                        output.println(\"The cards used for this stage: \");\r\n                        for (Card card : stage_card) {\r\n                            output.print(\" \"+ card.getSuit() + \"(\" + card.getValue() + \") \");\r\n                            playedCards.add(players.get(sponsor).playedCard(card.getSuit(), card.getValue()));\r\n                        }\r\n                        output.print(\" \"+ stage_card_F.get(0).getSuit() + \"(\" + stage_card_F.get(0).getValue() + \") \");\r\n                        playedCards.add(players.get(sponsor).playedCard(stage_card_F.get(0).getSuit(),stage_card_F.get(0).getValue()));\r\n                        addcard += 1 + stage_card.size();\r\n                        stage[round] = value;\r\n                        done = false;\r\n                    } else {\r\n                        stage_card.clear();\r\n                        stage_card_F.clear();\r\n                        output.println(\"Insufficient value for this stage \\n\");\r\n                    }\r\n                    output.println();\r\n                }\r\n                output.flush();\r\n            } else {\r\n                output.println(\"Please enter according to the format again \\n\");\r\n            }\r\n            output.flush();\r\n        }\r\n    }\r\n    public int hasCard(Player player, String suit, int value) {\r\n        for (int i = 0; i < player.getHand().size(); i++) {\r\n            if (player.getHand().get(i).getSuit().equals(suit) && player.getHand().get(i).getValue() == value) {\r\n                return i;\r\n            }\r\n        }\r\n        return 1111;\r\n\r\n    }\r\n    public void Get_sponsor(Scanner scanner){\r\n        for (int round = 0; round < players.size(); round++) {\r\n            output.println(\"current player: \" + players.get(current_player).Get_id());\r\n            Displaycard(players.get(current_player),output);\r\n            output.println(\"\\n The game has drawn a Q\" + stage.length + \" card\");\r\n            output.flush();\r\n            if (checksponsor(players.get(current_player))) {\r\n                output.println(\"\\n Do you want to sponsor the current task? Answer Y or N: \");\r\n                output.flush();\r\n                String playerans = scanner.nextLine();\r\n                if (playerans.contains(\"Y\")) {\r\n                    output.println(\"P\" + players.get(current_player).Get_id() + \" is sponsor \");\r\n                    output.flush();\r\n                    sponsor = current_player;\r\n                    break;\r\n                }\r\n            } else {\r\n                output.println(\"\\n player must NECESSARILY have cards that allow for the construction of a valid quest.\");\r\n                output.flush();\r\n            }\r\n            if (sponsor == 100) {\r\n                Player currentPlayer = players.get(current_player);\r\n                System.out.println(\"P\"+currentPlayer.Get_id() + \", please leave the hot seat. Press <return> to continue...\");\r\n                scanner.nextLine();\r\n                clearConsole();\r\n                if (current_player < players.size()-1) current_player++;\r\n                else current_player = 0;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    public void Get_Participants(Scanner scanner){\r\n        List<Player> remove_player = new ArrayList<>();\r\n        for (Player playersParticipant : players_Participants) {\r\n            current_player = playersParticipant.Get_id() - 1;\r\n            output.println(\"current player: \" + players.get(current_player).Get_id());\r\n            Displaycard(players.get(current_player),output);\r\n            output.println(\"\\n Do you want to join the current task? Answer Y: \");\r\n            output.flush();\r\n            String playerans = scanner.nextLine();\r\n            if (playerans.equals(\"Y\")) {\r\n                distributeCards(players.get(current_player), 1);\r\n                removeCards(scanner, players.get(current_player));\r\n                Displaycard(players.get(current_player),output);\r\n            } else {\r\n                remove_player.add(players.get(current_player));\r\n            }\r\n            Player currentPlayer = players.get(current_player);\r\n            System.out.println(\"P\" + currentPlayer.Get_id() + \", please leave the hot seat. Press <return> to continue...\");\r\n            scanner.nextLine();\r\n            clearConsole();\r\n        }\r\n        players_Participants.removeAll(remove_player);\r\n        if (!players_Participants.isEmpty()) current_player = players_Participants.get(0).Get_id()-1;\r\n    }\r\n    public boolean checksponsor(Player player) {\r\n        if (player.getHand().size() < stage.length) return false;\r\n        int f = 0;\r\n        for (int i = 0; i < player.getHand().size(); i++) {\r\n            if (player.getHand().get(i).getSuit().equals(\"F\")) {\r\n                f++;\r\n            }\r\n        }\r\n        return f >= stage.length;\r\n    }\r\n    public void start_stage(Scanner scanner) {\r\n        int round = 0;\r\n        for (int i = 0; i < stage.length; i++) {\r\n            if (stage[i] > 0) {\r\n                round = i;\r\n                break;\r\n            }\r\n        }\r\n        int next_players = current_player;\r\n        for (int i = 0; i < players_Participants.size(); i++) {\r\n            if (next_players == players_Participants.get(players_Participants.size()-1).Get_id()-1) {\r\n                next_players = players_Participants.get(0).Get_id() -1;\r\n                break;\r\n            } else if (next_players == players_Participants.get(i).Get_id() -1) {\r\n                next_players = players_Participants.get(i+1).Get_id() -1;\r\n                break;\r\n            }\r\n        }\r\n        output.println(\"current player: \" + players.get(current_player).Get_id());\r\n        boolean done = true;\r\n        while (done) {\r\n            Displaycard(players.get(current_player),output);\r\n            output.println();\r\n            output.println(\"stage : \" + (round+1));\r\n            output.print(\" Enter the card you want to play (e.g. S(10)): \");\r\n            output.flush();\r\n            String temp = scanner.nextLine();\r\n            if (!temp.isEmpty() && Check_input_card(temp)){\r\n                String suit = temp.substring(0, 1);\r\n                int value = Integer.parseInt(temp.substring(temp.indexOf(\"(\") + 1, temp.indexOf(\")\")));\r\n                int c = hasCard(players.get(current_player),suit,value);\r\n                if (c != 100) {\r\n                    if (suit.equals(\"F\")) output.println(\"Please enter the weapon card you have \\n\");\r\n                    else {\r\n                        if (!players.get(current_player).getAttackValueDeck().contains(players.get(current_player).getHand().get(c))) {\r\n                            players.get(current_player).addToAttackValueDeck(players.get(current_player).getHand().get(c));\r\n                            output.println(\" \"+ suit + \"(\" + value + \") \");\r\n                        } else {\r\n                            output.println(\" \"+ suit + \"(\" + value + \") \");\r\n                            output.println(\"non repeated weapon card \\n\");\r\n                        }\r\n                    }\r\n                } else output.println(\"Please enter the card you have \\n\");\r\n                output.print(\"\\n The value of the cards used in this stage is \"+ players.get(current_player).calculateAttackValue() + \" : \");\r\n                for (Card card : players.get(current_player).getAttackValueDeck()) {\r\n                    output.print(\" \"+ card.getSuit() + \"(\" + card.getValue() + \") \");\r\n                }\r\n                output.flush();\r\n            } else if (isInteger(temp)) {\r\n                int position = Integer.parseInt(temp);\r\n                if (position >= 1 && position <= players.get(current_player).getHand().size()) {\r\n                    Card c = players.get(current_player).getHand().get(position - 1);\r\n                    if (c.getSuit().equals(\"F\")) {\r\n                        output.println(\"Please enter the weapon card you have \\n\");\r\n                    } else {\r\n                        if (!players.get(current_player).getAttackValueDeck().contains(c)) {\r\n                            players.get(current_player).addToAttackValueDeck(c);\r\n                            output.println(\" \"+ c.getSuit() + \"(\" + c.getValue() + \") \");\r\n                        } else {\r\n                            output.println(\"non repeated weapon card \\n\");\r\n                        }\r\n                    }\r\n                }\r\n                output.print(\"\\n The value of the cards used in this stage is \"+ players.get(current_player).calculateAttackValue() + \" : \");\r\n                for (Card card : players.get(current_player).getAttackValueDeck()) {\r\n                    output.print(\" \"+ card.getSuit() + \"(\" + card.getValue() + \") \");\r\n                }\r\n                output.flush();\r\n            } else if (temp.contains(\"Quit\")) {\r\n                int value = stage[round];\r\n                if (current_player == players_Participants.get(players_Participants.size()-1).Get_id() -1) {\r\n                    stage[round] = 0;\r\n                }\r\n                if (!players.get(current_player).getAttackValueDeck().isEmpty()) {\r\n                    output.print(\"\\n The value of the cards used in this stage is \"+ players.get(current_player).calculateAttackValue() + \" : \");\r\n                    for (Card card : players.get(current_player).getAttackValueDeck()) {\r\n                        output.print(\" \"+ card.getSuit() + \"(\" + card.getValue() + \") \");\r\n                        playedCards.add(players.get(current_player).playedCard(card.getSuit(), card.getValue()));\r\n                    }\r\n                    if (players.get(current_player).calculateAttackValue() >= value) {\r\n                        if (round == stage.length-1) {\r\n                            int shields = players.get(current_player).Get_shields();\r\n                            players.get(current_player).Set_shields(shields + stage.length);\r\n                            players_Participants.remove(players.get(current_player));\r\n                        }\r\n                        output.println(\"\\n current stage win \\n\");\r\n                    } else {\r\n                        players_Participants.remove(players.get(current_player));\r\n                        output.println(\"\\n current stage fail \\n\");\r\n                    }\r\n                } else {\r\n                    players_Participants.remove(players.get(current_player));\r\n                    output.println(\"empty set of non repeated weapon cards \\n\");\r\n                }\r\n\r\n                output.flush();\r\n                players.get(current_player).cleanAttackValueDeck();\r\n                done = false;\r\n            } else {\r\n                output.println(\"Please enter according to the format again \\n\");\r\n            }\r\n            output.flush();\r\n        }\r\n        if (current_player != next_players || players_Participants.isEmpty()) {\r\n            Player currentPlayer = players.get(current_player);\r\n            System.out.println(\"P\"+currentPlayer.Get_id() + \", please leave the hot seat. Press <return> to continue...\");\r\n            scanner.nextLine();\r\n            clearConsole();\r\n        }\r\n        current_player = next_players;\r\n    }\r\n    public void startQRound(Scanner scanner){\r\n        Get_sponsor(scanner);\r\n        if (sponsor != 100) {\r\n            for (int round = 0; round < stage.length; round++) {\r\n                start_set_stage(scanner);\r\n            }\r\n            players_Participants.addAll(players);\r\n            players_Participants.remove(players.get(sponsor));\r\n            addcard += stage.length;\r\n            Player currentPlayer = players.get(current_player);\r\n            System.out.println(\"P\"+currentPlayer.Get_id() + \", please leave the hot seat. Press <return> to continue...\");\r\n            scanner.nextLine();\r\n            clearConsole();\r\n        } else {\r\n            stage = new int[0];\r\n        }\r\n    }\r\n\r\n    public void runQRound(Scanner scanner){\r\n        for (int round = 0; round < stage.length; round++) {\r\n            Displayplayers(output);\r\n            Get_Participants(scanner);\r\n            int num = players_Participants.size();\r\n            for (int i = 0; i < num; i++) {\r\n                start_stage(scanner);\r\n            }\r\n            if (players_Participants.isEmpty()) {\r\n                break;\r\n            }\r\n        }\r\n        endQRound(scanner);\r\n    }\r\n    public void endQRound(Scanner scanner){\r\n\r\n        distributeCards(players.get(sponsor), addcard);\r\n        if (players.get(sponsor).getHand().size() > 12) {\r\n            output.println(\"current player: \" + players.get(sponsor).Get_id());\r\n            removeCards(scanner, players.get(sponsor));\r\n        }\r\n        stage = new int[0];\r\n        addcard = 0;\r\n        sponsor = 100;\r\n    }\r\n\r\n    public void removeCards(Scanner scanner, Player player){\r\n        while (player.getHand().size() > 12) {\r\n            output.println(\"Player \"+player.Get_id() +\" need remove \"+ (player.getHand().size() - 12) + \" Cards\");\r\n            playCard(scanner, player);\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
--- a/src/main/java/org/example/Main.java	(revision 69153faa80be1874f5e4156420a23856227a0789)
+++ b/src/main/java/org/example/Main.java	(date 1730930271344)
@@ -471,6 +471,14 @@
             }
             output.flush();
         }
+        output.flush();
+        if (stage[stage.length-1] != 0) {
+            addcard += stage.length;
+            Player currentPlayer = players.get(current_player);
+            System.out.println("P"+currentPlayer.Get_id() + ", please leave the hot seat. Press <return> to continue...");
+            scanner.nextLine();
+            clearConsole();
+        }
     }
     public int hasCard(Player player, String suit, int value) {
         for (int i = 0; i < player.getHand().size(); i++) {
@@ -481,60 +489,76 @@
         return 1111;
 
     }
-    public void Get_sponsor(Scanner scanner){
-        for (int round = 0; round < players.size(); round++) {
-            output.println("current player: " + players.get(current_player).Get_id());
-            Displaycard(players.get(current_player),output);
-            output.println("\n The game has drawn a Q" + stage.length + " card");
-            output.flush();
-            if (checksponsor(players.get(current_player))) {
-                output.println("\n Do you want to sponsor the current task? Answer Y or N: ");
-                output.flush();
-                String playerans = scanner.nextLine();
-                if (playerans.contains("Y")) {
-                    output.println("P" + players.get(current_player).Get_id() + " is sponsor ");
-                    output.flush();
-                    sponsor = current_player;
-                    break;
-                }
-            } else {
-                output.println("\n player must NECESSARILY have cards that allow for the construction of a valid quest.");
-                output.flush();
-            }
-            if (sponsor == 100) {
-                Player currentPlayer = players.get(current_player);
-                System.out.println("P"+currentPlayer.Get_id() + ", please leave the hot seat. Press <return> to continue...");
-                scanner.nextLine();
-                clearConsole();
-                if (current_player < players.size()-1) current_player++;
-                else current_player = 0;
-            }
-
+    public void Get_sponsor_ans(Scanner scanner){
+        output.println("current player: " + players.get(current_player).Get_id());
+        Displaycard(players.get(current_player),output);
+        output.println("\n The game has drawn a Q" + stage.length + " card");
+        output.flush();
+        if (checksponsor(players.get(current_player))) {
+            output.println("\n Do you want to sponsor the current task? Answer Y or N: ");
+            output.flush();
+            String playerans = scanner.nextLine();
+            if (playerans.contains("Y")) {
+                output.println("P" + players.get(current_player).Get_id() + " is sponsor ");
+                output.flush();
+                sponsor = current_player;
+            }
+        } else {
+            output.println("\n player must NECESSARILY have cards that allow for the construction of a valid quest.");
+            output.flush();
+        }
+        if (sponsor == 100) {
+            Player currentPlayer = players.get(current_player);
+            System.out.println("P"+currentPlayer.Get_id() + ", please leave the hot seat. Press <return> to continue...");
+            scanner.nextLine();
+            clearConsole();
+            if (current_player < players.size()-1) current_player++;
+            else current_player = 0;
+        }
+    }
+    public void Get_sponsor(Scanner scanner){
+        for (int round = 0; round < players.size(); round++) {
+            Get_sponsor_ans(scanner);
+            if (sponsor != 100) break;
         }
     }
-
-    public void Get_Participants(Scanner scanner){
-        List<Player> remove_player = new ArrayList<>();
-        for (Player playersParticipant : players_Participants) {
-            current_player = playersParticipant.Get_id() - 1;
-            output.println("current player: " + players.get(current_player).Get_id());
-            Displaycard(players.get(current_player),output);
-            output.println("\n Do you want to join the current task? Answer Y: ");
-            output.flush();
-            String playerans = scanner.nextLine();
-            if (playerans.equals("Y")) {
-                distributeCards(players.get(current_player), 1);
-                removeCards(scanner, players.get(current_player));
-                Displaycard(players.get(current_player),output);
-            } else {
-                remove_player.add(players.get(current_player));
-            }
-            Player currentPlayer = players.get(current_player);
-            System.out.println("P" + currentPlayer.Get_id() + ", please leave the hot seat. Press <return> to continue...");
-            scanner.nextLine();
-            clearConsole();
+    public void Get_Participants_ans(Scanner scanner) {
+        int next_players = current_player;
+        for (int i = 0; i < players_Participants.size(); i++) {
+            if (next_players == players_Participants.get(players_Participants.size()-1).Get_id()-1) {
+                next_players = players_Participants.get(0).Get_id() -1;
+                break;
+            } else if (next_players == players_Participants.get(i).Get_id() -1) {
+                next_players = players_Participants.get(i+1).Get_id() -1;
+                break;
+            }
+        }
+        output.println("current player: " + players.get(current_player).Get_id());
+        Displaycard(players.get(current_player),output);
+        output.println("\n Do you want to join the current task? Answer Y: ");
+        output.flush();
+        String playerans = scanner.nextLine();
+        if (playerans.equals("Y")) {
+            distributeCards(players.get(current_player), 1);
+            removeCards(scanner, players.get(current_player));
+            Displaycard(players.get(current_player),output);
+        } else {
+            players_Participants.remove(players.get(current_player));
+        }
+
+        Player currentPlayer = players.get(current_player);
+        System.out.println("P" + currentPlayer.Get_id() + ", please leave the hot seat. Press <return> to continue...");
+        scanner.nextLine();
+        clearConsole();
+        output.flush();
+        current_player = next_players;
+
+    }
+    public void Get_Participants(Scanner scanner){
+        int num = players_Participants.size();
+        for (int i = 0; i < num; i++) {
+            Get_Participants_ans(scanner);
         }
-        players_Participants.removeAll(remove_player);
         if (!players_Participants.isEmpty()) current_player = players_Participants.get(0).Get_id()-1;
     }
     public boolean checksponsor(Player player) {
@@ -658,19 +682,18 @@
         }
         current_player = next_players;
     }
+    public void setParticipants() {
+        players_Participants.addAll(players);
+        players_Participants.remove(players.get(sponsor));
+        current_player = players_Participants.get(0).id-1;
+    }
     public void startQRound(Scanner scanner){
         Get_sponsor(scanner);
         if (sponsor != 100) {
             for (int round = 0; round < stage.length; round++) {
                 start_set_stage(scanner);
             }
-            players_Participants.addAll(players);
-            players_Participants.remove(players.get(sponsor));
-            addcard += stage.length;
-            Player currentPlayer = players.get(current_player);
-            System.out.println("P"+currentPlayer.Get_id() + ", please leave the hot seat. Press <return> to continue...");
-            scanner.nextLine();
-            clearConsole();
+            setParticipants();
         } else {
             stage = new int[0];
         }
Index: .idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml
new file mode 100644
--- /dev/null	(date 1730930271410)
+++ b/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml	(date 1730930271410)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_rebase_[Changes]" date="1730919848295" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before rebase [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1730930271367)
+++ b/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch	(date 1730930271367)
@@ -0,0 +1,115 @@
+Index: .idea/misc.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_20\" default=\"true\" project-jdk-name=\"20\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/misc.xml b/.idea/misc.xml
+--- a/.idea/misc.xml	(revision f8180405c46abde3262c130885b6e184d7016e33)
++++ b/.idea/misc.xml	(date 1730919684683)
+@@ -1,3 +1,4 @@
++<?xml version="1.0" encoding="UTF-8"?>
+ <project version="4">
+   <component name="ExternalStorageConfigurationManager" enabled="true" />
+   <component name="MavenProjectsManager">
+@@ -7,7 +8,7 @@
+       </list>
+     </option>
+   </component>
+-  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" default="true" project-jdk-name="20" project-jdk-type="JavaSDK">
++  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="23" project-jdk-type="JavaSDK">
+     <output url="file://$PROJECT_DIR$/out" />
+   </component>
+ </project>
+\ No newline at end of file
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"13b5f6a1-645a-4dfa-830d-7a2ea44d2ffb\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"A2\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nDADtMcuOXRf8zhT1oCtq8QoIt\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary\": \"JUnit5\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5\": \"\",\r\n    \"git-widget-placeholder\": \"A2\",\r\n    \"onboarding.tips.debug.path\": \"D:/下载/COMP4004/A1-4004/src/main/java/org/example/Main.java\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"org.example\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"MainTest.RESP_07_test_01\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"A1-4004\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.example\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.MainTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"RESP_07_test_01\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MainTest.RESP_08_test_03\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"A1-4004\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.example\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.MainTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"RESP_08_test_03\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"A1-Zhang-Lanyue-101192831\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"A1-Zhang-Lanyue-101192831\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"A1-Zhang-Lanyue-101192831\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\r\n      <module name=\"A1-Zhang-Lanyue-101192831\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.MainTest.RESP_07_test_01\" />\r\n        <item itemvalue=\"JUnit.MainTest.RESP_08_test_03\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"13b5f6a1-645a-4dfa-830d-7a2ea44d2ffb\" name=\"Changes\" comment=\"\" />\r\n      <created>1728497157860</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1728497157860</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision f8180405c46abde3262c130885b6e184d7016e33)
++++ b/.idea/workspace.xml	(date 1730919684676)
+@@ -5,8 +5,8 @@
+   </component>
+   <component name="ChangeListManager">
+     <list default="true" id="13b5f6a1-645a-4dfa-830d-7a2ea44d2ffb" name="Changes" comment="">
++      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -37,7 +37,7 @@
+     </favorite-branches>
+     <option name="RECENT_BRANCH_BY_REPOSITORY">
+       <map>
+-        <entry key="$PROJECT_DIR$" value="main" />
++        <entry key="$PROJECT_DIR$" value="A2" />
+       </map>
+     </option>
+     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+@@ -54,20 +54,21 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent"><![CDATA[{
+-  "keyToString": {
+-    "RunOnceActivity.OpenProjectViewOnStart": "true",
+-    "RunOnceActivity.ShowReadmeOnStart": "true",
+-    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
+-    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
+-    "git-widget-placeholder": "A2",
+-    "onboarding.tips.debug.path": "D:/下载/COMP4004/A1-4004/src/main/java/org/example/Main.java",
+-    "project.structure.last.edited": "Modules",
+-    "project.structure.proportion": "0.0",
+-    "project.structure.side.proportion": "0.0",
+-    "settings.editor.selected.configurable": "preferences.pluginManager"
++  <component name="PropertiesComponent">{
++  &quot;keyToString&quot;: {
++    &quot;JUnit.AcceptanceTest.executor&quot;: &quot;Run&quot;,
++    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
++    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
++    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
++    &quot;git-widget-placeholder&quot;: &quot;A2-test&quot;,
++    &quot;onboarding.tips.debug.path&quot;: &quot;D:/下载/COMP4004/A1-4004/src/main/java/org/example/Main.java&quot;,
++    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
++    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
++    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
++    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
+   }
+-}]]></component>
++}</component>
+   <component name="RecentsManager">
+     <key name="CreateTestDialog.Recents.Supers">
+       <recent name="" />
+@@ -124,6 +125,7 @@
+     </configuration>
+     <configuration default="true" type="PythonConfigurationType" factoryName="Python">
+       <module name="A1-Zhang-Lanyue-101192831" />
++      <option name="ENV_FILES" value="" />
+       <option name="INTERPRETER_OPTIONS" value="" />
+       <option name="PARENT_ENVS" value="true" />
+       <envs>
+@@ -145,6 +147,7 @@
+     </configuration>
+     <configuration default="true" type="Tox" factoryName="Tox">
+       <module name="A1-Zhang-Lanyue-101192831" />
++      <option name="ENV_FILES" value="" />
+       <option name="INTERPRETER_OPTIONS" value="" />
+       <option name="PARENT_ENVS" value="true" />
+       <option name="SDK_HOME" value="" />
+@@ -156,6 +159,9 @@
+     </configuration>
+     <recent_temporary>
+       <list>
++        <item itemvalue="JUnit.MainTest.RESP_08_test_03" />
++        <item itemvalue="JUnit.MainTest.RESP_07_test_01" />
++        <item itemvalue="JUnit.MainTest.RESP_08_test_03" />
+         <item itemvalue="JUnit.MainTest.RESP_07_test_01" />
+         <item itemvalue="JUnit.MainTest.RESP_08_test_03" />
+       </list>
Index: src/test/resources/A2_Tests.feature
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/A2_Tests.feature b/src/test/resources/A2_Tests.feature
new file mode 100644
--- /dev/null	(date 1730930289852)
+++ b/src/test/resources/A2_Tests.feature	(date 1730930289852)
@@ -0,0 +1,19 @@
+
+Feature: Blackjack Game
+  Scenario: A1 scenario
+    Given Start game and decks are created
+    When P1 draws a quest of 4 stages
+    Then P1 is declines to sponsor
+    And P2 is sponsors and builds the 4 stages
+#
+#    Then P1 is decides to participate draws F30 F5
+#    And P1 is decides to participate draws F30 F5
+#    And P1 is decides to participate draws F30 F5
+#    Then P1 draws D S value of 15
+
+A2
+
+
+  Scenario:
+  Scenario:
+  Scenario:
Index: src/test/java/org/example/CucumberStep.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/CucumberStep.java b/src/test/java/org/example/CucumberStep.java
new file mode 100644
--- /dev/null	(date 1730930271361)
+++ b/src/test/java/org/example/CucumberStep.java	(date 1730930271361)
@@ -0,0 +1,168 @@
+package org.example;
+
+import io.cucumber.java.en.*;
+import org.junit.jupiter.api.Test;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import java.io.PrintWriter;
+import java.io.StringWriter;
+import java.util.Scanner;
+
+import static org.junit.Assert.*;
+import static org.junit.jupiter.api.Assertions.*;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+
+public class CucumberStep {
+
+    private Main newGame;
+
+    @Given("Start game and decks are created")
+    public void start_game() {
+        List<Card> cards = new ArrayList<>();
+        for (int i = 1; i <= 6; i++) {
+            cards.add( new Card("F", "F", 10));
+        }
+        cards.add( new Card("F", "F", 15));
+        for (int i = 1; i <= 7; i++) {
+            cards.add( new Card("F", "F", 20));
+        }
+        for (int i = 1; i <= 7; i++) {
+            cards.add( new Card("F", "F", 25));
+        }
+        for (int i = 1; i <= 2; i++) {
+            cards.add( new Card("F", "F", 30));
+        }
+        for (int i = 1; i <= 4; i++) {
+            cards.add( new Card("F", "F", 35));
+        }
+        for (int i = 1; i <= 2; i++) {
+            cards.add( new Card("F", "F", 50));
+        }
+        cards.add( new Card("F", "F", 70));
+        // Create basic weapon cards: Swords, battle-axes, lances, horses, excaliburs, and daggers
+
+        cards.add( new Card("W", "D", 5));
+
+        for (int i = 1; i <= 7; i++) {
+            // Swords (S)
+            cards.add( new Card("W", "S", 10));
+        }
+        for (int i = 1; i <= 4; i++) {
+            // Horses (H)
+            cards.add( new Card("W", "H", 10));
+        }
+
+        cards.add(new Card("W",  "L", 20));
+        cards.add(new Card("F",  "F", 30));
+
+        cards.add(new Card("W",  "S", 10));
+        cards.add(new Card("W",  "B", 15));
+
+        cards.add(new Card("W",  "L", 20));
+        cards.add(new Card("W",  "L", 20));
+        cards.add(new Card("F",  "F", 10));
+
+        cards.add(new Card("W",  "B", 15));
+        cards.add(new Card("W",  "S", 10));
+        cards.add(new Card("F",  "F", 30));
+
+        //p4
+        cards.add(new Card("F", "F", 5));
+        cards.add(new Card("F", "F", 15));
+        cards.add(new Card("F", "F", 15));
+        cards.add(new Card("F", "F", 40));
+        cards.add(new Card("W",  "D", 5));
+        cards.add(new Card("W",  "D", 5));
+        cards.add(new Card("W",  "S", 10));
+        cards.add(new Card("W",  "H", 10));
+        cards.add(new Card("W",  "H", 10));
+        cards.add(new Card("W",  "B", 15));
+        cards.add(new Card("W",  "L", 20));
+        cards.add(new Card("W",  "E", 30));
+        //p3
+        cards.add(new Card("F", "F", 5));
+        cards.add(new Card("F", "F", 5));
+        cards.add(new Card("F", "F", 5));
+        cards.add(new Card("F", "F", 15));
+        cards.add(new Card("W",  "D", 5));
+        cards.add(new Card("W",  "S", 10));
+        cards.add(new Card("W",  "S", 10));
+        cards.add(new Card("W",  "S", 10));
+        cards.add(new Card("W",  "H", 10));
+        cards.add(new Card("W",  "H", 10));
+        cards.add(new Card("W",  "B", 15));
+        cards.add(new Card("W",  "L", 20));
+        //p2
+        cards.add(new Card("F", "F", 5));
+        cards.add(new Card("F", "F", 5));
+        cards.add(new Card("F", "F", 15));
+        cards.add(new Card("F", "F", 15));
+        cards.add(new Card("F", "F", 40));
+        cards.add(new Card("W",  "D", 5));
+        cards.add(new Card("W",  "S", 10));
+        cards.add(new Card("W",  "H", 10));
+        cards.add(new Card("W",  "H", 10));
+        cards.add(new Card("W",  "B", 15));
+        cards.add(new Card("W",  "B", 15));
+        cards.add(new Card("W",  "E", 30));
+        //p1
+        cards.add(new Card("F", "F", 5));
+        cards.add(new Card("F", "F", 5));
+        cards.add(new Card("F", "F", 15));
+        cards.add(new Card("F", "F", 15));
+        cards.add(new Card("W",  "D", 5));
+        cards.add(new Card("W",  "S", 10));
+        cards.add(new Card("W",  "S", 10));
+        cards.add(new Card("W",  "H", 10));
+        cards.add(new Card("W",  "H", 10));
+        cards.add(new Card("W",  "B", 15));
+        cards.add(new Card("W",  "B", 15));
+        cards.add(new Card("W",  "L", 20));
+        
+        List<Card> event_cards = new ArrayList<>();
+        for (int i = 1; i <= 5; i++) {
+            if (i == 1) event_cards.add( new Card("E", "Pl", 2));
+            else if (i <= 1 + 2) event_cards.add( new Card("E", "Qf", 2));
+            else event_cards.add( new Card("E", "Pr", 2));
+        }
+        // Create quest (Q) cards
+        for (int i = 1; i <= 12 - 1; i++) {
+            if (i <= 3) event_cards.add( new Card("Q", "Q", 2));
+            else if (i <= 3 + 4) event_cards.add( new Card("Q", "Q", 3));
+            else if (i <= 3 + 4 + 3 - 1) event_cards.add( new Card("Q", "Q", 4));
+            else event_cards.add( new Card("Q", "Q", 5));
+        }
+        event_cards.add(new Card("Q",  "Q", 4));
+        newGame = new Main();
+        newGame.startGame();
+        newGame.deck = cards;
+        newGame.event_deck = event_cards;
+        assertEquals(100, newGame.deck.size());
+        assertEquals(17, newGame.event_deck.size());
+        newGame.distributeallCards();
+    }
+
+
+    @When("P1 draws a quest of {int} stages")
+    public void p1_draws_a_quest_of_stages(Integer int1) {
+        newGame.draws_event_card(new Scanner(""));
+
+    }
+    @Then("P1 is declines to sponsor")
+    public void p1_draws() {
+        newGame.startQRound(new Scanner(" \n \n"));
+    }
+
+    @And("P{int} is sponsors and builds the {int} stages")
+    public void pIsSponsorsAndBuildsTheStages(int arg0, int arg1) {
+        newGame.startQRound(new Scanner(" \n \n"));
+    }
+
+//    @And("P1 draws a quest of {int} stages")
+//    public void p1_draws_a_quest_of_stages(Integer int1) {
+//
+//    }
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"13b5f6a1-645a-4dfa-830d-7a2ea44d2ffb\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"A2\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"A2\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nDADtMcuOXRf8zhT1oCtq8QoIt\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;JUnit.AcceptanceTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;A2-test&quot;,\r\n    &quot;onboarding.tips.debug.path&quot;: &quot;D:/下载/COMP4004/A1-4004/src/main/java/org/example/Main.java&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"org.example\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"MainTest.RESP_07_test_01\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"A1-4004\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.example\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.MainTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"RESP_07_test_01\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MainTest.RESP_08_test_03\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"A1-4004\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.example\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.MainTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"RESP_08_test_03\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"A1-Zhang-Lanyue-101192831\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"A1-Zhang-Lanyue-101192831\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"A1-Zhang-Lanyue-101192831\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\r\n      <module name=\"A1-Zhang-Lanyue-101192831\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.MainTest.RESP_08_test_03\" />\r\n        <item itemvalue=\"JUnit.MainTest.RESP_07_test_01\" />\r\n        <item itemvalue=\"JUnit.MainTest.RESP_08_test_03\" />\r\n        <item itemvalue=\"JUnit.MainTest.RESP_07_test_01\" />\r\n        <item itemvalue=\"JUnit.MainTest.RESP_07_test_01\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"13b5f6a1-645a-4dfa-830d-7a2ea44d2ffb\" name=\"Changes\" comment=\"\" />\r\n      <created>1728497157860</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1728497157860</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 69153faa80be1874f5e4156420a23856227a0789)
+++ b/.idea/workspace.xml	(date 1730930289967)
@@ -5,8 +5,15 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="13b5f6a1-645a-4dfa-830d-7a2ea44d2ffb" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_11_6_14_00_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_11_6_14_00__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/org/example/CucumberStep.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/org/example/RunCucumberTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/resources/A2_Tests.feature" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -37,7 +44,7 @@
     </favorite-branches>
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="A2" />
+        <entry key="$PROJECT_DIR$" value="A2-test" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -54,21 +61,28 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;JUnit.AcceptanceTest.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
-    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;A2-test&quot;,
-    &quot;onboarding.tips.debug.path&quot;: &quot;D:/下载/COMP4004/A1-4004/src/main/java/org/example/Main.java&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Cucumber Java.Scenario: .executor": "Run",
+    "Cucumber Java.Scenario: A1 scenario.executor": "Run",
+    "Cucumber Java.Scenario: A1_scenario.executor": "Run",
+    "JUnit.AcceptanceTest.executor": "Run",
+    "JUnit.CucumberStep.executor": "Run",
+    "JUnit.CucumberStep.rig_a_new_game_of_blackjack_starts.executor": "Run",
+    "JUnit.RunCucumberTest.executor": "Run",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
+    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
+    "git-widget-placeholder": "A2",
+    "kotlin-language-version-configured": "true",
+    "onboarding.tips.debug.path": "D:/下载/COMP4004/A1-4004/src/main/java/org/example/Main.java",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.0",
+    "settings.editor.selected.configurable": "preferences.general"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CreateTestDialog.Recents.Supers">
       <recent name="" />
@@ -77,8 +91,67 @@
       <recent name="org.example" />
     </key>
   </component>
-  <component name="RunManager">
-    <configuration name="MainTest.RESP_07_test_01" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+  <component name="RunManager" selected="Cucumber Java.Scenario: ">
+    <configuration name="Scenario: A1 scenario" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
+      <option name="CUCUMBER_CORE_VERSION" value="5" />
+      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/resources/A2_Tests.feature" />
+      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
+      <module name="A1-4004" />
+      <option name="NAME_FILTER" value="^A1 scenario$" />
+      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter --name &quot;^A1 scenario$&quot;" />
+      <option name="SUGGESTED_NAME" value="Scenario: A1 scenario" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="io.cucumber.core.cli.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Scenario: A1_scenario" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
+      <option name="CUCUMBER_CORE_VERSION" value="5" />
+      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/resources/A2_Tests.feature" />
+      <option name="GLUE" value="org.example" />
+      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
+      <module name="A1-4004" />
+      <option name="NAME_FILTER" value="^A1_scenario$" />
+      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter --name &quot;^A1_scenario$&quot;" />
+      <option name="SUGGESTED_NAME" value="Scenario: A1_scenario" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="io.cucumber.core.cli.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Scenario: " type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
+      <option name="CUCUMBER_CORE_VERSION" value="5" />
+      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/resources/A2_Tests.feature" />
+      <option name="GLUE" value="org.example" />
+      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
+      <module name="A1-4004" />
+      <option name="NAME_FILTER" value="^$" />
+      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter --name &quot;^$&quot;" />
+      <option name="SUGGESTED_NAME" value="Scenario: " />
+      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="io.cucumber.core.cli.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="CucumberStep.rig_a_new_game_of_blackjack_starts" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="A1-4004" />
       <extension name="coverage">
         <pattern>
@@ -87,14 +160,14 @@
         </pattern>
       </extension>
       <option name="PACKAGE_NAME" value="org.example" />
-      <option name="MAIN_CLASS_NAME" value="org.example.MainTest" />
-      <option name="METHOD_NAME" value="RESP_07_test_01" />
+      <option name="MAIN_CLASS_NAME" value="org.example.CucumberStep" />
+      <option name="METHOD_NAME" value="rig_a_new_game_of_blackjack_starts" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="MainTest.RESP_08_test_03" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="RunCucumberTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="A1-4004" />
       <extension name="coverage">
         <pattern>
@@ -103,9 +176,8 @@
         </pattern>
       </extension>
       <option name="PACKAGE_NAME" value="org.example" />
-      <option name="MAIN_CLASS_NAME" value="org.example.MainTest" />
-      <option name="METHOD_NAME" value="RESP_08_test_03" />
-      <option name="TEST_OBJECT" value="method" />
+      <option name="MAIN_CLASS_NAME" value="org.example.RunCucumberTest" />
+      <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -159,11 +231,11 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="JUnit.MainTest.RESP_08_test_03" />
-        <item itemvalue="JUnit.MainTest.RESP_07_test_01" />
-        <item itemvalue="JUnit.MainTest.RESP_08_test_03" />
-        <item itemvalue="JUnit.MainTest.RESP_07_test_01" />
-        <item itemvalue="JUnit.MainTest.RESP_07_test_01" />
+        <item itemvalue="Cucumber Java.Scenario: A1 scenario" />
+        <item itemvalue="JUnit.RunCucumberTest" />
+        <item itemvalue="Cucumber Java.Scenario: " />
+        <item itemvalue="Cucumber Java.Scenario: A1_scenario" />
+        <item itemvalue="JUnit.CucumberStep.rig_a_new_game_of_blackjack_starts" />
       </list>
     </recent_temporary>
   </component>
@@ -178,4 +250,19 @@
     </task>
     <servers />
   </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <breakpoint enabled="true" type="java-exception">
+          <properties class="java.lang.NullPointerException" package="java.lang" />
+          <option name="timeStamp" value="1" />
+        </breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/A1_Zhang_Lanyue_101192831$Scenario__A1_scenario.ic" NAME="Scenario: A1_scenario 覆盖结果" MODIFIED="1730926822071" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
+      <FILTER>io.cucumber.core.cli.*</FILTER>
+    </SUITE>
+  </component>
 </project>
\ No newline at end of file
Index: src/test/java/org/example/RunCucumberTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/RunCucumberTest.java b/src/test/java/org/example/RunCucumberTest.java
new file mode 100644
--- /dev/null	(date 1730930271395)
+++ b/src/test/java/org/example/RunCucumberTest.java	(date 1730930271395)
@@ -0,0 +1,11 @@
+package org.example;
+
+import static org.junit.jupiter.api.Assertions.*;
+import org.junit.runner.RunWith;
+import io.cucumber.junit.Cucumber;
+import io.cucumber.junit.CucumberOptions;
+
+@RunWith(Cucumber.class)
+@CucumberOptions(plugin = {"pretty"}, features = "src/test/resources")
+public class RunCucumberTest {
+}
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024_11_6_14_00__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_11_6_14_00__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_11_6_14_00__Changes_.xml
new file mode 100644
--- /dev/null	(date 1730930271403)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_11_6_14_00__Changes_.xml	(date 1730930271403)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_2024_11_6_14_00_[Changes]" date="1730919662745" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_11_6_14_00_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024/11/6 14:00 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024_11_6_14_00_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_11_6_14_00_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_11_6_14_00_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1730930271374)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_11_6_14_00_[Changes]/shelved.patch	(date 1730930271374)
@@ -0,0 +1,47 @@
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"13b5f6a1-645a-4dfa-830d-7a2ea44d2ffb\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"A2\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"A2\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nDADtMcuOXRf8zhT1oCtq8QoIt\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;JUnit.AcceptanceTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;A2-test&quot;,\r\n    &quot;onboarding.tips.debug.path&quot;: &quot;D:/下载/COMP4004/A1-4004/src/main/java/org/example/Main.java&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"org.example\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"MainTest.RESP_07_test_01\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"A1-4004\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.example\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.MainTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"RESP_07_test_01\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MainTest.RESP_08_test_03\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"A1-4004\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.example\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.MainTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"RESP_08_test_03\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"A1-Zhang-Lanyue-101192831\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"A1-Zhang-Lanyue-101192831\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"A1-Zhang-Lanyue-101192831\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\r\n      <module name=\"A1-Zhang-Lanyue-101192831\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.MainTest.RESP_08_test_03\" />\r\n        <item itemvalue=\"JUnit.MainTest.RESP_07_test_01\" />\r\n        <item itemvalue=\"JUnit.MainTest.RESP_08_test_03\" />\r\n        <item itemvalue=\"JUnit.MainTest.RESP_07_test_01\" />\r\n        <item itemvalue=\"JUnit.MainTest.RESP_07_test_01\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"13b5f6a1-645a-4dfa-830d-7a2ea44d2ffb\" name=\"Changes\" comment=\"\" />\r\n      <created>1728497157860</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1728497157860</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision 69153faa80be1874f5e4156420a23856227a0789)
++++ b/.idea/workspace.xml	(date 1730919597089)
+@@ -4,10 +4,7 @@
+     <option name="autoReloadType" value="SELECTIVE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="13b5f6a1-645a-4dfa-830d-7a2ea44d2ffb" name="Changes" comment="">
+-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-    </list>
++    <list default="true" id="13b5f6a1-645a-4dfa-830d-7a2ea44d2ffb" name="Changes" comment="" />
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+@@ -61,11 +58,12 @@
+     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+     &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
+     &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
+-    &quot;git-widget-placeholder&quot;: &quot;A2-test&quot;,
++    &quot;git-widget-placeholder&quot;: &quot;A2-Zhang-Lanyue-101192831&quot;,
++    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+     &quot;onboarding.tips.debug.path&quot;: &quot;D:/下载/COMP4004/A1-4004/src/main/java/org/example/Main.java&quot;,
+-    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
++    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
+     &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
+-    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
++    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+     &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
+   }
+ }</component>
+@@ -77,7 +75,7 @@
+       <recent name="org.example" />
+     </key>
+   </component>
+-  <component name="RunManager">
++  <component name="RunManager" selected="JUnit.MainTest.RESP_07_test_01">
+     <configuration name="MainTest.RESP_07_test_01" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+       <module name="A1-4004" />
+       <extension name="coverage">
